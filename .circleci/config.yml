version: 2.1

orbs:
  docker: circleci/docker@1.7.0
  gcp-cli: circleci/gcp-cli@2.4.1
  jq: circleci/jq@2.2.0

commands:
  run-deploy-sh:
    description: "Deploy GCP CE instance"
    parameters:
      aura_keyset:
        type: string
      granpa_keyset:
        type: string
      instance:
        type: string
      zone:
        type: string
        default: us-central1-a
    steps:
      - gcp-cli/install
      - gcp-cli/initialize
      - run:
          name: Prepare SSH metadata for GCP ðŸ¦Œ
          command: |
            mkdir -p ~/.ssh && \
            echo ${SSH_PUB_DEPLOY} > ~/.ssh/google_compute_engine.pub && \
            echo "-----BEGIN OPENSSH PRIVATE KEY-----" > ~/.ssh/google_compute_engine && \
            echo ${SSH_PRV_DEPLOY} >> ~/.ssh/google_compute_engine && \
            echo "-----END OPENSSH PRIVATE KEY-----" >> ~/.ssh/google_compute_engine && \
            chmod 600 ~/.ssh/google_compute_engine
      - checkout
      - run:
          echo "Docker Tag = ${DOCKER_TAGS[0]}"
      - run:
          echo "CircleCi SHA = ${CIRCLE_SHA1}"
      - run:
          name: Run deploy.sh on << parameters.instance >>
          command: |
            gcloud compute scp deploy.sh circleci@<< parameters.instance >>:deploy.sh --zone=<< parameters.zone >>
            gcloud compute ssh --zone << parameters.zone >> circleci@<< parameters.instance >> --command "chmod +x deploy.sh"
            gcloud compute ssh --zone << parameters.zone >> circleci@<< parameters.instance >> --command "./deploy.sh ${DO_REGISTRY_TOKEN} ${<< parameters.aura_keyset >>} ${<< parameters.granpa_keyset >>} ${DOCKER_TAGS[0]}"

jobs:
  build-and-push-docker:
    description: "Build & Push Docker Image"
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - docker/check:
          docker-username: DO_REGISTRY_TOKEN
          docker-password: DO_REGISTRY_TOKEN
          registry: registry.digitalocean.com
          use-docker-credentials-store: false
      - docker/build:
          image: jur-jbp/jur-node
          no_output_timeout: "90m"
          registry: registry.digitalocean.com
      - docker/push:
          image: jur-jbp/jur-node
          registry: registry.digitalocean.com
  deploy-prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - run-deploy-sh:
          instance: jur-node-test-us-a-2
          aura_keyset: KEY_SET_AURA_1
          granpa_keyset: KEY_SET_GRANPA_1

workflows:
  prod-flow:
    jobs:
      - build-and-push-docker
      - deploy-prod:
          requires:
            - build-and-push-docker
          filters:
            branches:
              only:
                - feat/docker-circleci # for testing (remove it later)
                - main # for production
