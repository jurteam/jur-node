version: 2.1

orbs:
  terraform: circleci/terraform@3.2.0
  docker: circleci/docker@1.7.0
  gcp-gcr: circleci/gcp-gcr@0.15.1
  gcp-cli: circleci/gcp-cli@2.4.1

# Commands
commands:
  install_latest_terraform:
    description: "Install latest terraform"
    steps:
      - run:
          name: Install latest terraform
          command: wget -nv https://releases.hashicorp.com/terraform/1.4.5/terraform_1.4.5_linux_amd64.zip && unzip terraform_1.4.5_linux_amd64.zip && mv terraform /usr/local/bin && terraform -v
  run-deploy-sh:
    description: "Deploy Docker to GCP CE instance"
    parameters:
      instance:
        type: string
      zone:
        type: string
        default: us-central1-a
    steps:
      - checkout
      - gcp-cli/install
      - gcp-cli/initialize
      - run:
          name: Prepare SSH metadata for GCP ðŸ¦Œ
          command: |
            echo $GCLOUD_SERVICE_KEY > key.json
            gcloud --quiet compute scp key.json circleci@<< parameters.instance >>:key.json --zone=<< parameters.zone >>
            gcloud --quiet compute scp deploy.sh circleci@<< parameters.instance >>:deploy.sh --zone=<< parameters.zone >>
            gcloud --quiet compute scp docker-compose.yml circleci@<< parameters.instance >>:docker-compose.yml --zone=<< parameters.zone >>
            gcloud --quiet compute scp nginx/default.conf circleci@<< parameters.instance >>:nginx/default.conf --zone=<< parameters.zone >>
            gcloud --quiet compute ssh  circleci@<< parameters.instance >> --command "chmod +x deploy.sh" --zone << parameters.zone >>
            gcloud --quiet compute ssh  circleci@<< parameters.instance >> --command "./deploy.sh" --zone << parameters.zone >>
            gcloud --quiet compute ssh  circleci@<< parameters.instance >> --command "rm -f key.json" --zone << parameters.zone >>
# Jobs
jobs:
  validate_infrastructure:
    description: "Validate Infrastructure"
    executor: terraform/default
    steps:
      - checkout
      - install_latest_terraform
      - terraform/init:
          path: infrastructure
      - terraform/validate:
          path: infrastructure
      - terraform/fmt:
          path: infrastructure
    working_directory: ~/src

  apply_infrastructure:
    parameters:
      sub_domain:
        type: string
        default: "testnet"
      deployment_environment:
        type: string
        default: "staging"
    description: "Apply Infrastructure"
    executor: terraform/default
    environment:
      TF_VAR_SUB_DOMAIN: << parameters.sub_domain >>
      TF_VAR_DEPLOYMENT_ENVIRONMENT: << parameters.deployment_environment >>
    steps:
      - checkout
      - install_latest_terraform
      - terraform/plan:
          backend_config: "prefix=<< parameters.deployment_environment >>-l1-jur-node"
          path: infrastructure
      - terraform/apply:
          backend_config: "prefix=<< parameters.deployment_environment >>-l1-jur-node"
          path: infrastructure
    working_directory: ~/src

  build_and_push_docker_image:
    description: "Build and Push Docker Image"
    executor: gcp-gcr/default
    resource_class: xlarge
    steps:
      - checkout
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_CREDENTIALS
      - gcp-gcr/build-image:
          image: jur-node
          no_output_timeout: 20m
          registry-url: us.gcr.io
      - gcp-gcr/push-image:
          image: jur-node
          registry-url: us.gcr.io
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - run-deploy-sh:
          instance: staging-l1-jur-node-archive-compute-instance-us-central1-a-1

# Workflows
workflows:
  staging:
    jobs:
      - validate_infrastructure:
          filters:
            branches:
              only: feat/cicd
      - approve:
          description: "Approve"
          type: approval
          requires:
            - validate_infrastructure
      - apply_infrastructure:
          requires:
            - approve
      - build_and_push_docker_image:
          requires:
            - apply_infrastructure
      - deploy:
          requires:
            - build_and_push_docker_image
